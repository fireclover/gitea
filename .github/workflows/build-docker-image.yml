name: Build FC Gitea image
#run-name: Deploying ${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      location:
        description: 'Azure location for deployment'
        type: string
        default: norwayeast
        required: true
      customerId:
        type: string
        required: false
      customerName:
        type: string
        required: false             
      deploymentAdmin:
        type: string
        required: false        
      deploymentClientId:
        type: string
        required: false
      deploymentTenantId:
        type: string
        required: false  
      starDeployName:
        type: string
        required: false              
      starDeployEnviroment:
        type: string
        required: false             
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - dev
      - qa
      - prod
      - main
      - fc

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication

permissions:
  id-token: write
  contents: write
  packages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.  

env:
  AZURE_DEV_COLLECT_TELEMETRY: 'no'
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID || '068bba2a-36dd-4115-ad01-c1c40c90fa7a' }}
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION || inputs.location  || 'norwayeast' }}
  AZURE_CLIENT_ID: ${{ inputs.deploymentClientId || vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ inputs.deploymentTenantId || vars.AZURE_TENANT_ID }}  
  STAR_AZURE_ENV_NAME: "${{ inputs.starDeployName || vars.STAR_AZURE_ENV_NAME  || 'star' }}"
  STAR_DEPLOYMENT_VANITY_SUBDOMAIN: "${{ inputs.starDeployName || vars.STAR_AZURE_ENV_NAME  || 'star' }}"
  STAR_DEPLOYMENT_ENVIRONMENT: ${{ inputs.starDeployEnviroment || vars.STAR_DEPLOYMENT_ENVIRONMENT || github.ref_name }}
  ENVIRONMENT: "${{ inputs.starDeployName || vars.STAR_AZURE_ENV_NAME  || 'star' }}-${{ inputs.starDeployEnviroment || vars.STAR_DEPLOYMENT_ENVIRONMENT || github.ref_name }}"
  AZURE_RESOURCE_GROUP: "rg-${{ inputs.starDeployName || vars.STAR_AZURE_ENV_NAME  || 'star' }}-${{ inputs.starDeployEnviroment || vars.STAR_DEPLOYMENT_ENVIRONMENT || github.ref_name }}"
  CUSTOMER_NAME: "${{ inputs.customerName || vars.STAR_AZURE_ENV_NAME  || 'star' }}"
  CUSTOMER_ID: ${{ inputs.customerId || inputs.customerName || 'star' }}
  USE_GITLAB_AKS: false
  USE_MATTERMOST: false
  USE_GITLAB: false
  IS_PROD: ${{ github.ref_name == 'prod' }}
  AZURE_ENV_NAME: "${{ inputs.starDeployName || vars.STAR_AZURE_ENV_NAME  || 'star' }}-${{ inputs.starDeployEnviroment || vars.STAR_DEPLOYMENT_ENVIRONMENT || github.ref_name }}"

  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  GITEA_IMAGE_NAME: fireclover/gitea
  FARADAY_IMAGE_NAME: fireclover/faraday
  #IMAGE_NAME: ${{ github.repository }}
  GITEA_VERSION: 'fireclover-1.0'

jobs:
  build-publish-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-gitea
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.GITEA_IMAGE_NAME }}
          
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push-gitea
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta-gitea.outputs.tags }}
          labels: ${{ steps.meta-gitea.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Scan images
      # - name: Run the FireClover SCA scan action
      #   uses: fc-actions/scan-sca@v0.1.5
      #   id: scan-gitea
      #   with:
      #     source: ${{ env.REGISTRY }}/${{ env.GITEA_IMAGE_NAME }}:${{ github.ref_name }}

      # - name: Upload vulnerability report
      #   uses: fc-actions/report@v0.1.11
      #   with:
      #     instance-url: https://vulns.${{ github.ref_name != 'prod' && 'dev.' || '' }}${{ env.STAR_DEPLOYMENT_VANITY_SUBDOMAIN }}.ms.fireclover.cloud
      #     password: ${{ secrets.FARADAY_PASSWD }}
      #     workspace: ${{ env.CUSTOMER_ID }}
      #     result-file: ${{ steps.scan-gitea.outputs.vulns }}